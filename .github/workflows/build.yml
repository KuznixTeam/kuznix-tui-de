name: Daily Build

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 23 * * *'  # 00:00 CET daily (23:00 UTC)
  workflow_dispatch:

jobs:
  ubuntu-build:
    strategy:
      matrix:
        host: [ubuntu-22.04, ubuntu-latest]
    runs-on: ${{ matrix.host }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set version
        id: version
        run: |
          DATE=$(date -u +"%Y%m%d")
          VERSION="0.1-$DATE"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version set to $VERSION"

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential zip xz-utils

      - name: Build project
        run: |
          mkdir -p dist/linux
          # Replace this with your actual build commands
          echo "Sample file for ${{ matrix.host }}" > dist/linux/README.txt

      - name: Create archives (built output)
        run: |
          OS_DIR=dist/linux
          for ext in tar.gz tar.xz zip; do
            ARCHIVE_NAME=kuznix-tui-de-${VERSION}-${{ matrix.host }}.$ext
            if [ "$ext" = "tar.gz" ]; then
              tar -czf $ARCHIVE_NAME -C $OS_DIR .
            elif [ "$ext" = "tar.xz" ]; then
              tar -cJf $ARCHIVE_NAME -C $OS_DIR .
            elif [ "$ext" = "zip" ]; then
              zip -r $ARCHIVE_NAME $OS_DIR/*
            fi
            echo "Created built output archive: $ARCHIVE_NAME"
          done

      - name: Create archives (source code)
        run: |
          SRC_DIR=.
          for ext in tar.gz tar.xz zip; do
            SRC_ARCHIVE=kuznix-tui-de-${VERSION}-${{ matrix.host }}-src.$ext
            if [ "$ext" = "tar.gz" ]; then
              tar --exclude=dist -czf $SRC_ARCHIVE -C $SRC_DIR .
            elif [ "$ext" = "tar.xz" ]; then
              tar --exclude=dist -cJf $SRC_ARCHIVE -C $SRC_DIR .
            elif [ "$ext" = "zip" ]; then
              zip -r $SRC_ARCHIVE $(ls -A | grep -v '^dist$')
            fi
            echo "Created source archive: $SRC_ARCHIVE"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}
          path: |
            kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}.tar.gz
            kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}.tar.xz
            kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}.zip
            kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}-src.tar.gz
            kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}-src.tar.xz
            kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}-src.zip
