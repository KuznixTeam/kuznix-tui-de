name: Daily Build

on:
  schedule:
    - cron: '0 23 * * *' # 00:00 CET nightly (23:00 UTC)
  workflow_dispatch: # Manual trigger

jobs:
  ubuntu-build:
    strategy:
      matrix:
        host: [ubuntu-22.04, ubuntu-latest]
    runs-on: ${{ matrix.host }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set version
        id: version
        run: |
          DATE=$(date -u +"%Y%m%d")
          VERSION="0.1-$DATE"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version set to $VERSION"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ninja-build meson zip xz-utils

      - name: Configure Meson build
        run: |
          meson setup build --buildtype=release

      - name: Compile with Ninja
        run: |
          meson compile -C build

      - name: Compress binaries
        run: |
          BIN_DIR=build  # Meson build output directory
          for ext in tar.gz tar.xz zip; do
            ARCHIVE_NAME=kuznix-tui-de-${VERSION}-${{ matrix.host }}-bin.$ext
            if [ "$ext" = "tar.gz" ]; then
              tar -czf $ARCHIVE_NAME -C $BIN_DIR .
            elif [ "$ext" = "tar.xz" ]; then
              tar -cJf $ARCHIVE_NAME -C $BIN_DIR .
            elif [ "$ext" = "zip" ]; then
              zip -r $ARCHIVE_NAME $BIN_DIR/*
            fi
            echo "Created binary archive: $ARCHIVE_NAME"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}-bin
          path: |
            kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}-bin.tar.gz
            kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}-bin.tar.xz
            kuznix-tui-de-${{ env.VERSION }}-${{ matrix.host }}-bin.zip
